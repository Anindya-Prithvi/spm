name: Release
on:
  workflow_dispatch
  
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10
  MACOSX_DEPLOYMENT_TARGET: 10.7

jobs:
  # Update release PR
  release_please:
    name: Release Please
    runs-on: ubuntu-latest
    if: github.repository == 'Anindya-Prithvi/spm'
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          release-type: rust
          draft: true

  # Build sources for every OS
  github_build:
    name: Build release binaries
    needs: release_please
    if: ${{ needs.release_please.outputs.release_created == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: spm-x86_64-unknown-linux-gnu.tar.gz

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: spm-x86_64-unknown-linux-musl.tar.gz

          - target: i686-unknown-linux-musl
            os: ubuntu-latest
            name: spm-i686-unknown-linux-musl.tar.gz

          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            name: spm-aarch64-unknown-linux-musl.tar.gz

          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest
            name: spm-arm-unknown-linux-musleabihf.tar.gz

          - target: x86_64-apple-darwin
            os: macOS-11
            name: spm-x86_64-apple-darwin.tar.gz

          - target: aarch64-apple-darwin
            os: macOS-11
            name: spm-aarch64-apple-darwin.tar.gz

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: spm-x86_64-pc-windows-msvc.zip
            rustflags: -C target-feature=+crt-static

          - target: i686-pc-windows-msvc
            os: windows-latest
            name: spm-i686-pc-windows-msvc.zip
            rustflags: -C target-feature=+crt-static

          - target: aarch64-pc-windows-msvc
            os: windows-latest
            name: spm-aarch64-pc-windows-msvc.zip
            rustflags: -C target-feature=+crt-static

          - target: x86_64-unknown-freebsd
            os: ubuntu-latest
            name: spm-x86_64-unknown-freebsd.tar.gz

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      RUSTFLAGS: ${{ matrix.rustflags || '' }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Setup | Install cargo-wix [Windows]
        continue-on-error: true
        # aarch64 is only supported in wix 4.0 development builds
        if: matrix.os == 'windows-latest' && matrix.target != 'aarch64-pc-windows-msvc'
        run: cargo install --version 0.3.2 cargo-wix
        env:
          # cargo-wix does not require static crt
          RUSTFLAGS: ''

      - name: Build | Build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Build | Installer [Windows]
        continue-on-error: true
        if: matrix.os == 'windows-latest' && matrix.target != 'aarch64-pc-windows-msvc'
        uses: actions-rs/cargo@v1.0.3
        with:
          command: wix
          args: -v --no-build --nocapture -I install/windows/main.wxs --target ${{ matrix.target }} --output target/wix/spm-${{ matrix.target }}.msi

      - name: Post Build | Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.name }} spm.exe
          cd -

      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../${{ matrix.name }} spm
          cd -

      - name: Release | Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

      - name: Release | Upload installer artifacts [Windows]
        continue-on-error: true
        if: matrix.os == 'windows-latest' && matrix.target != 'aarch64-pc-windows-msvc'
        uses: actions/upload-artifact@v3
        with:
          name: spm-${{ matrix.target }}.msi
          path: target/wix/spm-${{ matrix.target }}.msi
